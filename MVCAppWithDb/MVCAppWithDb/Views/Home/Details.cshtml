@model MyApp.Models.EventModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Date)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Location)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Location)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartTime)
        </dd>
        @if (Model.Duration != null)
        {
        <dt>
            @Html.DisplayNameFor(model => model.Duration)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Duration)
        </dd>
        }
        @if (Model.Description != null) { 
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        }
        @if (Model.OtherDetails != null){
        <dt>
            @Html.DisplayNameFor(model => model.OtherDetails)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OtherDetails)
        </dd>
        }
        @if (Model.InviteByEmail != null)
        {
        <dt>
            @Html.DisplayNameFor(model => model.InviteByEmail)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.InviteByEmail)
        </dd>
        }
        @if (Model.comments != "")
        {
        <dt>
            @Html.DisplayNameFor(model => model.comments)
        </dt>

        <dd>
          
        @foreach (var item in Model.comments.Split(','))
        {
                <h5>@item</h5>    
        }
              
        </dd>
        }
    </dl>
</div>

@using (Html.BeginForm("Comment","Home",FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EventId)
    <div class="form-group">
        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add Comment" class="btn btn-default" />
        </div>
    </div>
</div>
}
<p>
    @Html.ActionLink("Back to List", "GetAllRecords")
</p>
